initSidebarItems({"fn":[["array_to_vec","convert an Array to a Vec, should work for all which impl the FromJSValConvertible trait like: bool u8 i8 u16 i16 u32 i32 u64 i64 f32 f64 String # Example `no_run use es_runtime::esruntimebuilder::EsRuntimeBuilder; use es_runtime::jsapi_utils; use mozjs::jsval::UndefinedValue; use mozjs::rooted; use es_runtime::jsapi_utils::arrays::array_to_vec; let rt = EsRuntimeBuilder::new().build(); rt.do_in_es_event_queue_sync(|sm_rt| { sm_rt.do_with_jsapi(|rt, cx, global| {  rooted!(in (cx) let mut rval = UndefinedValue());  jsapi_utils::eval(rt, global, \"([4, 7, 9]);\", \"test_array_to_vec.es\", rval.handle_mut());  let conv_res = array_to_vec(cx, rval.handle());  let conv_res_sucv = conv_res.get_success_value();  let vec: &Vec<u8> = conv_res_sucv.expect(\"array_to_vec failed\");  assert_eq!(vec.len(), 3); }) }); `"],["get_array_element","get the Value of an index of an Array"],["get_array_length","get the length of an Array"],["new_array","create a new array obj"],["new_array2","create a new array obj"],["object_is_array","check whether or not an Object is an Array"],["object_is_array2","check whether or not an Object is an Array"],["push_array_element","add an element to an Array"],["set_array_element","set an element of an Array"],["set_array_element_f64",""],["set_array_element_i32",""],["set_array_element_object","set an element of an Array"],["set_array_element_u32",""],["vec_to_array","convert a Vec to an Array, please note that this does not create typed arrays, use the typed_arrays mod for that"]]});